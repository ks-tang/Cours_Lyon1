{
	"info": {
		"_postman_id": "b0d5d767-d21d-4b48-8fbc-67d7045026ba",
		"name": "Chatons-M1IF03-2022",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Create user by POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain users/\" + pm.variables.get(\"userId\"), function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"users/\" + pm.collectionVariables.get(\"userId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"userName\", \"Toto\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{userId}}",
									"type": "default"
								},
								{
									"key": "name",
									"value": "{{userName}}",
									"type": "default"
								},
								{
									"key": "password",
									"value": "{{userPassword}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Create salon\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{userId}}",
									"type": "default"
								},
								{
									"key": "password",
									"value": "{{userPassword}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"toto\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(pm.collectionVariables.get(\"userName\"));\r",
									"});\r",
									"pm.test(\"Body matches salon URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(pm.collectionVariables.get(\"salonId\"));\r",
									"});\r",
									"pm.test(\"Body contains message URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches user name\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(pm.collectionVariables.get(\"userName\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's owned salons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches salon URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(pm.collectionVariables.get(\"salonUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/ownedSalons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"ownedSalons"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's memberOf salons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon member\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/memberOfSalons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"memberOfSalons"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's created messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains message URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/createdMessages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"createdMessages"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's owned salon list subresource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain salons/tralala\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"salons/tralala\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/ownedSalons/tralala",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"ownedSalons",
								"tralala"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's memberOf salon list subresource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain salons/prop1/prop2\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"salons/prop1/prop2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/memberOfSalons/prop1/prop2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"memberOfSalons",
								"prop1",
								"prop2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user's created message list subresource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain messages/152/texte\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"messages/152/text\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}/createdMessages/152/text",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"createdMessages",
								"152",
								"text"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"userName\", \"Tototo\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{userName}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(pm.collectionVariables.get(\"userName\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user by PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain users/titi\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"users/titi\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Titi",
									"type": "default"
								},
								{
									"key": "password",
									"value": "test",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/titi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"titi"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user created by PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.contain(\"Titi\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/titi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"titi"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user created by PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/titi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"titi"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user created by PUT after DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"GET all salons\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/titi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"titi"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{userId}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user after logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "salons",
			"item": [
				{
					"name": "Create salon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"    pm.collectionVariables.set(\"salonUrl\", pm.response.headers.get(\"Location\"));\r",
									"});\r",
									"pm.test(\"Location header is correctly formatted\", function() {\r",
									"    var location = pm.response.headers.get(\"Location\").split(\"/\");\r",
									"    pm.expect(location.size).not.to.eql(0);\r",
									"    pm.collectionVariables.set(\"salonId\", location[location.length - 1]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"salonName\", \"Mon beau salon\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{userId}}",
									"type": "default"
								},
								{
									"key": "name",
									"value": "{{salonName}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/salons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add membre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"    pm.collectionVariables.set(\"salonMember\", pm.collectionVariables.get(\"userId\"));\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Create message\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user",
									"value": "{{userId}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all salons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/salons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonName\"));\r",
									"});\r",
									"pm.test(\"Body contains salon owner\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});\r",
									"pm.test(\"Body contains salon member\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});\r",
									"pm.test(\"Body contains message URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonName\"));\r",
									"});\r",
									"pm.test(\"Body contains message text\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageText\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon nom\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonName\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon owner\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"owner"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon member\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains message URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon owner nom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain users/{:ownerId}/name\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"users/\" + pm.collectionVariables.get(\"userId\") + \"/name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/owner/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"owner",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon members nom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain users/{:userId}/name\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"users/\" + pm.collectionVariables.get(\"userId\") + \"/name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/members/{{userId}}/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"members",
								"{{userId}}",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon message texte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain messages/0/text\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"messages/0/text\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/messages/0/text",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"messages",
								"0",
								"text"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update salon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"GET all messages\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"salonName\", \"Mon TRES beau salon\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{salonName}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET salon after Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains salon name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonName\"));\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"GET all messages\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}/members?user={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}",
								"members"
							],
							"query": [
								{
									"key": "user",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete salon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"postman.setNextRequest(\"Delete user\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/salons/{{salonId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"salons",
								"{{salonId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "messages",
			"item": [
				{
					"name": "Create message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"    pm.collectionVariables.set(\"messageUrl\", pm.response.headers.get(\"Location\"));\r",
									"});\r",
									"pm.test(\"Location header is correctly formatted\", function() {\r",
									"    var location = pm.response.headers.get(\"Location\").split(\"/\");\r",
									"    pm.expect(location.size).not.to.eql(0);\r",
									"    pm.collectionVariables.set(\"messageId\", location[location.length - 1]);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"GET all users\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"messageText\", \"Ah que coucou !\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "author",
									"value": "{{userId}}",
									"type": "default"
								},
								{
									"key": "salon",
									"value": "{{salonId}}",
									"type": "default"
								},
								{
									"key": "text",
									"value": "{{messageText}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageUrl\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches message salon\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonId\"));\r",
									"});\r",
									"pm.test(\"Body matches message author\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});\r",
									"pm.test(\"Body matches message text\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageText\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches message author\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"userId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}/author",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}",
								"author"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message salon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches message salon\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"salonId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}/salon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}",
								"salon"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches message text\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageText\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}/text",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}",
								"text"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message author name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain users/{:authorId}/name\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"users/\" + pm.collectionVariables.get(\"userId\") + \"/name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}/author/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}",
								"author",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message salon name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"pm.test(\"Location to contain salons/{:salonId}/name\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Location\")).to.have.string(\"salons/\" + pm.collectionVariables.get(\"salonId\") + \"/name\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}/salon/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}",
								"salon",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"messageText\", \"Waaaarf !!!\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "text",
									"value": "{{messageText}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET message after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches message text\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"messageText\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"pm.collectionVariables.set(\"messageId\", pm.collectionVariables.get(\"messageId\") - 1);\r",
									"postman.setNextRequest(\"Delete member\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messages/{{messageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages",
								"{{messageId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": "toto",
			"type": "default"
		},
		{
			"key": "userPassword",
			"value": "password",
			"type": "default"
		},
		{
			"key": "userName",
			"value": "Toto",
			"type": "default"
		},
		{
			"key": "salonId",
			"value": "null",
			"type": "default"
		},
		{
			"key": "salonName",
			"value": "Mon beau salon",
			"type": "default"
		},
		{
			"key": "messageText",
			"value": "Ah que coucou !",
			"type": "default"
		},
		{
			"key": "allSalonsCacheHeader",
			"value": "null",
			"type": "default"
		},
		{
			"key": "oneSalonCacheHeader",
			"value": "null",
			"type": "default"
		},
		{
			"key": "messageId",
			"value": "null",
			"type": "default"
		},
		{
			"key": "userNom",
			"value": ""
		},
		{
			"key": "salonNom",
			"value": ""
		},
		{
			"key": "salonUrl",
			"value": ""
		},
		{
			"key": "salonMembre",
			"value": ""
		},
		{
			"key": "messageUrl",
			"value": ""
		},
		{
			"key": "salonMember",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "{{localUrl}}",
			"type": "default"
		},
		{
			"key": "localUrl",
			"value": "http://localhost:8080/chatons_war_exploded",
			"type": "default"
		},
		{
			"key": "vmTomcatUrl",
			"value": "http://{{ipVm}}:8080/v3",
			"type": "default"
		},
		{
			"key": "vmNginxUrl",
			"value": "https://{{ipVm}}/api/v3",
			"type": "default"
		}
	]
}
